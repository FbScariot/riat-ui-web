<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DescriptionAna" xml:space="preserve">
    <value>&lt;h3&gt;Ana Joulie - Diretora Clínica&lt;/h3&gt;
&lt;p&gt;Psicóloga, Doutoranda em Psicologia Clínica da UCES, Diplomada em Rorschach (Escola Argentina), Acompanhante Terapêutica, especializada em Patologias Graves e Empreendedora&lt;/p&gt;</value>
  </data>
  <data name="DescriptionFabricio" xml:space="preserve">
    <value>&lt;h3&gt;Fabricio Bertoncello Scariot - Diretor de Tecnologia&lt;/h3&gt;
&lt;p&gt;Especialista em simplicidade. Sou responsável por criar uma equipe de engenharia sólida, construir ótimos produtos, bem como fornecer soluções inovadoras. Liderando a inovação tecnológica e o desenvolvimento de produtos na empresa.&lt;/p&gt;</value>
  </data>
  <data name="DescriptionMarcel" xml:space="preserve">
    <value>&lt;h3&gt;Marcel Araújo Rocha – Diretor Administrativo&lt;/h3&gt;
&lt;p&gt;Empreteco, Acompanhante Terapêutico especializado em Patologias Graves e Empreendedor. Estudante de Psicologia na Universidad de Buenos Aires (UBA), agora dedicado em tempo integral a RIAT.&lt;/p&gt;</value>
  </data>
  <data name="DescriptionRISM" xml:space="preserve">
    <value>&lt;p&gt;
    A RISM surgiu em 2020 como um spin-off da RIAT, sentíamos a necessidade de utilizar o nosso expertise desenvolvido ao longo de anos em cuidado humano para criar algo que pudesse ajudar no combate a pandemia do Coronavírus, queríamos sair da sensação de impotência e construir algo que aportasse uma solução relevante ao contexto da pandemia.
    Movidos por esse espírito nos inscrevemos no Hack for Brazil, uma iniciativa que reuniu milhares de empreendedores brasileiros de distintos lugares do mundo, nesse evento virtual conhecemos o Fabricio Scariot, que se tornou nosso responsável pelo desenvolvimento tecnológico. Fomos uma das ideias ganhadoras do Hack for Brazil.
    Em seguida fomos selecionados pelo projeto Startup Amazonas, onde refinamos ainda mais nossa ideia inicial em um processo de bastante aprendizado.
    Hoje nosso projeto é uma realidade e estamos começando a impactar a sociedade a nossa volta!
&lt;/p&gt;
&lt;p&gt;Empresa especializada em Cuidado Humano, atuando no Brasil e Argentina, criando um novo paradigma nos serviços de Acompanhamento Terapêutico e Cuidadores.&lt;/p&gt;</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Quem Somos?</value>
  </data>
</root>